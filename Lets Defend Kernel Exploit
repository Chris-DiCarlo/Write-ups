# Kernel Exploit Incident Analysis  

**Platform**: Forensic Linux Triage Challenge  
**Category**: Blue Team (Forensics & Incident Response)  


---

## 1) Objective  
Conduct forensic analysis on a compromised Linux transaction processing server following anomalous traffic detections. Determine the attack vector, methods used, and key artifacts to assess the scope of compromise.  

---

## 2) Tools Used  
- Linux forensic triage utilities  
- Hashing utilities (`sha256sum`)  
- VirusTotal (threat intelligence lookup)  
- Process analysis (live response artifacts)  
- Host log review (`hostnamectl`, system logs)  

---

## 3) Methodology / Steps Taken  

1. **Initial Setup**  
   - Obtained forensic image from:  
     `/root/Desktop/ChallengeFile/linuxTriageImage.tar.zip`  
   - Decompressed with password `infected`.  

2. **Triage & Exploration**  
   - Began with `/tmp` directory review, a common staging location for malicious payloads.  
   - Identified suspicious binary named **`exploit`**, consistent with a kernel privilege escalation tool.  

3. **Malware Identification**  
   - Generated SHA256 hash of the file and queried VirusTotal.  
   - File matched a known Linux kernel exploit — **Dirty Pipe (CVE-2022-0847)**.  
   - VirusTotal reported the first submission date: **2022-03-07**.  

4. **Process Investigation**  
   - Reviewed live response process artifacts.  
   - Identified malicious **PID 2345** running as user `a1l4m`.  
   - Traced parent process: **PPID 1686 → systemd**.  

5. **System Baseline Validation**  
   - Confirmed OS details from `hostnamectl.txt`: **Ubuntu 22.04.1 LTS**.  
   - Kernel version recorded as: **5.15.0-25-generic**.  

---

## 4) Findings & Results  

- **Privilege Escalation File**:  
  `exploit` (Dirty Pipe kernel exploit)  

- **VirusTotal First Submission Date**:  
  2022-03-07  

- **Attacker Process ID (PID)**:  
  2345  

- **User Account Running Malicious Process**:  
  `a1l4m`  

- **Parent Process ID (PPID)**:  
  1686 → `systemd`  

- **Operating System**:  
  Ubuntu 22.04.1 LTS  

- **Kernel Version**:  
  5.15.0-25-generic  

- **Exploited Vulnerability (CVE)**:  
  **CVE-2022-0847 (Dirty Pipe)** — a privilege escalation flaw in the Linux kernel.  

---

## 5) Skills Applied & Learned  

- Linux forensic image analysis  
- Privilege escalation detection and mapping to CVEs  
- Process tree analysis & attribution  
- Threat intelligence correlation (VirusTotal)  
- System baseline validation from host artifacts  

---

## 6) Lessons Learned / Teaching Points  

- **Temporary directories (`/tmp`) are high-risk zones** frequently abused for attacker payloads.  
- **Hash-based intelligence lookups (VirusTotal, Talos)** accelerate triage and attribution.  
- **Process tree analysis is critical**: malicious children tied back to `systemd` revealed escalation paths.  
- **Timely patching of kernel vulnerabilities** (like Dirty Pipe) is essential for reducing attack surface.  

---

## 7) Next Steps / Improvements  

- Deploy **real-time monitoring** of `/tmp` for newly created executable files.  
- Implement **kernel integrity monitoring** and enforce patch management cycles.  
- Add **SIEM detections** for anomalous process relationships (e.g., `systemd` spawning non-standard binaries).  
- Automate **hash extraction and threat intelligence queries** in IR playbooks.  

---

## Appendix  

### Evidence Screenshots  
- ![Hashing and VirusTotal Submission](images/kernel-exploit/hash-virustotal.png)  
- ![Malicious Process Tree](images/kernel-exploit/process-tree.png)  
- ![Hostnamectl Output](images/kernel-exploit/hostnamectl.png)  

### Key Commands  
```bash
# Decompress forensic image
unzip linuxTriageImage.tar.zip -d linuxTriageImage/

# Hash suspicious file
sha256sum exploit

# Review system details
cat hostnamectl.txt
